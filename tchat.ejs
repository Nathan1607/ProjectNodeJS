<!DOCTYPE html>
<html>
  <head>
    <title>Tchat</title>
    <style>
      body { 
        margin: 0;
        padding-bottom: 3rem; 
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; 
      }

      h1 {
        text-align: center;
      }

      #form-pseudo {
        margin-bottom: 20px;
        margin-left: 3rem;
      }

      #form-pseudo label {
        margin-bottom: 10px;
        font-weight: bold;
      }

      #form-pseudo input[type="text"] {
        padding: 5px;
        font-size: 16px;
        border-radius: 4px;
        border: 1px solid #ccc;
      } 

      #form-pseudo button[type="submit"] {
        padding: 5px 10px;
        font-size: 16px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }

      #form-pseudo button[type="submit"]:hover {
        background-color: #0056b3;
      }

      #pseudo-choisi {
        margin-bottom: 1rem;
        margin-left: 3rem;
        font-weight: bold;
      }

      .title_h1 {
        margin-top: 5rem;
      }

      #form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
      #input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
      #input:focus { outline: none; }
      #form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }
      
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages > li { padding: 0.5rem 1rem; }
      #messages > li:nth-child(odd) { background: #efefef; } 
    </style>
  </head>
  
  <body>

    <%- include('parts/header.ejs') %>

    <h1 class="title_h1">Tchat en ligne</h1>
        
      <form id="form-pseudo">
          <label for="pseudo">Choisissez un pseudo : </label>
          <input type="text" id="pseudo" name="pseudo">
          <button type="submit">OK</button>
        </form>
        <div id="pseudo-choisi">Pseudo : </div>


      <div id="messages">
        <% for(var i=0; i<chatHistory.length; i++) { %>
          <li><strong><%= chatHistory[i].pseudo %></strong>: <%= chatHistory[i].content %><small><%= chatHistory[i].time %></small></li>
        <% } %>
      </div>    

      <div id="messages"></div>

    <form id="form" action="">
      <input id="input" autocomplete="off" /><button>Send</button>
    </form>
       
    <script src="/socket.io/socket.io.js"></script>
      
<script>
    const socket = io();
    const messages = document.getElementById('messages');
    const form = document.getElementById('form');
    const input = document.getElementById('input');
    const formPseudo = document.getElementById('form-pseudo');
    const pseudoChoisi = document.getElementById('pseudo-choisi');

//Gestion du chat
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    if (input.value) {
      socket.emit('chat message', input.value);
      input.value = '';
    }
  });

  socket.on('chat message', function(msg, time) {
    var item = document.createElement('li');
    item.innerHTML = '<strong>' + pseudo + '</strong>' + ' : ' + msg + '          ' + time ;
    messages.appendChild(item);
    window.scrollTo(0, document.body.scrollHeight);
  });

  // Gestion du cookie
  formPseudo.addEventListener('submit', (e) => {
    e.preventDefault();
    const pseudo = document.getElementById('pseudo').value;
    socket.emit('nouveau-pseudo', pseudo);
    document.cookie = `pseudo=${pseudo}; SameSite=Strict; path=/`;
    location.reload();
  });

  // Fonction pour extraire la valeur d'un cookie
  function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
  }

  // Affichage du pseudo stock√© dans le cookie "pseudo"
  const pseudo2 = document.getElementById('pseudo-choisi');
  const pseudo = getCookie('pseudo') || 'Anonyme';

  if (pseudo) {
    pseudoChoisi.textContent = `Pseudo : ${pseudo}`;
  }

  // History
  socket.emit('pseudo', pseudo);

  // Envoi d'un message au serveur
  function sendMessage() {
    var input = document.getElementById('messageInput');
    var message = input.value;
    socket.emit('chat message', message);
    input.value = '';
    return false;
  }
// Fin History

  function displayChatHistory(chatHistory) {
    var messagesContainer = document.getElementById('messages');
    messagesContainer.innerHTML = '';

    for (var i = 0; i < chatHistory.length; i++) {
      var message = chatHistory[i];
      var listItem = document.createElement('li');
      listItem.innerHTML = '<strong>' + pseudo + '</strong>: ' + message.content + '         ' + '<small>' + message.time + '</small>';
      messagesContainer.appendChild(listItem);
    }
  }

  displayChatHistory(<%- JSON.stringify(chatHistory) %>);


</script>

  </body>
</html>

